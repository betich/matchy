{"version":3,"sources":["Pages/Routes/Users/Home.js","Pages/Routes/Users/Edit.js","Pages/Routes/Users/View.js","Pages/Routes/Users/Index.js"],"names":["UserCard","props","Card","bg","text","style","width","className","Body","Title","user","username","Text","email","to","url","Button","variant","type","Index","useState","Users","setUsers","loaded","setLoad","error","setError","UserCardList","map","e","_id","useEffect","axios","get","then","res","data","users","catch","err","response","status","console","id","Edit","state","errors","oldUserData","handleSubmit","bind","handleInputChange","validateData","this","match","params","setState","finally","formData","validate","valid","invalidData","preventDefault","options","headers","put","history","push","Form","onSubmit","noValidate","inputChange","oldData","edit","React","Component","EditSection","DeleteSection","useHistory","show","setShow","disable","setDisable","confirmed","setConfirmed","handleClick","a","delete","onClick","disabled","Group","Label","Control","autoFocus","onChange","target","value","name","fullname","birthday","day","month","year","interests","elem","i","expFields","education","work","exp","experiences","hasOwnProperty","title","displayExpFields","View","User","setUser","authorized","setAuthorized","handleError","exact","path","component"],"mappings":"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","file":"static/js/15.b1a2e042.chunk.js","sourcesContent":["import { Button, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst UserCard = (props) => {\n    return ( \n    <>\n        <Card\n            bg=\"white\"\n            text=\"black\"\n            style={{ width: '18rem' }}\n            className=\"mb-2\"\n            >\n            <Card.Body>\n                <Card.Title>{props.user.username}</Card.Title>\n                <Card.Text>{props.user.email}</Card.Text>\n            </Card.Body>\n            <Link to={`/users/${props.url}`} className=\"d-flex justify-content-center mb-3\">\n                <Button variant=\"outline-info\" type=\"submit\">\n                    View\n                </Button>\n            </Link>\n        </Card>\n    </>\n    );\n}\n\nconst Index = (props) => {\n    const [Users, setUsers] = useState([]);\n    const [loaded, setLoad] = useState(false);\n    const [error, setError] = useState(null);\n\n    let UserCardList = Users.map((e) => <UserCard url={e.username} user={e} key={e._id}/>);\n\n    useEffect(() => {\n        axios\n        .get(`/app/users`)\n        .then((res) => res.data)\n        .then((users) => {\n            setUsers(users);\n        })\n        .then(() => setLoad(true))\n        .catch((err) => {\n            if (err.response) {\n                if (err.response.status === 401) setError(\"You need to be logged in first\");\n                else if (err.response.status === 500) setError(\"internal server error\");\n                else setError(err.response.data);\n            } else {\n                setError(\"an unknown error occured\");\n            }\n            setLoad(true);\n\n            console.error(err);\n        })\n    }, []);\n\n    const renderComponents = () => {\n        const HomeUser = () => {\n            return (\n                <>\n                    <h1>Users</h1>\n                    <div id=\"userLinks\">\n                        <h4>User Links</h4>\n                        <div className=\"d-flex flex-wrap\">\n                            {UserCardList}\n                        </div>\n                    </div>\n                </>\n            );\n        }\n\n        if (loaded) {\n            if (error) return (<span>{error}</span>);\n            else return (<> { HomeUser() } </>);\n        } else {\n            return (<span>loading...</span>)\n        }\n    }\n\n    return (\n        <>\n            { renderComponents() }\n        </>\n    );\n}\n\nexport default Index;","import axios from \"axios\";\nimport React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport validate from \"../../../Services/Validate\";\nimport UserForm from \"../../../Components/Form/User\";\n\nclass Edit extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: {},\n            errors: {},\n            oldUserData: null,\n            loaded: false,\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.validateData = this.validateData.bind(this);\n    }\n\n    componentDidMount() {\n        axios\n            .get(`/app/users/${this.props.match.params.username}`)\n            .then((res) => res.data)\n            .then((user) => {\n                this.setState({ oldUserData: user });\n            })\n            .catch((err) => {\n                console.error(err);\n            })\n            .finally(() => this.setState({ loaded: true }));\n    }\n\n    handleInputChange(formData) {\n        this.setState({ data: formData });\n    }\n\n    validateData(data) {\n        const { valid, invalidData } = validate(data);\n\n        if (valid) {\n            this.setState({ errors: {} });\n            return true;\n        } else {\n            this.setState({ errors: invalidData });\n            return false;\n        }\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        let data = this.state.data;\n        delete data[\"username\"];\n        delete data[\"password\"];\n\n        const { valid, invalidData } = validate(data);\n\n        if (valid) {\n            const options = {\n                headers: { \"Content-Type\": \"application/json\" },\n            };\n\n            axios\n                .put(`/app/users/${this.props.match.params.username}`, data, options)\n                .then(\n                    (response) => {\n                        if (response.status === 200) {\n                            this.props.history.push(\n                                `/users/${this.props.match.params.username}`\n                            );\n                        }\n                    },\n                    (err) => {\n                        console.error(err);\n                    }\n                );\n        } else {\n            this.setState({ errors: invalidData });\n        }\n    }\n\n    render() {\n        const renderComponents = () => {\n            const EditUser = () => {\n                return (\n                    <>\n                        <h1>Edit user information</h1>\n                        <Form onSubmit={this.handleSubmit} noValidate>\n                            <UserForm\n                                inputChange={this.handleInputChange}\n                                oldData={this.state.oldUserData}\n                                edit={true}\n                                errors={this.state.errors}\n                                validate={this.validateData}\n                            />\n                        </Form>\n                    </>\n                );\n            }\n            \n            if (this.state.loaded) {\n                if (!this.state.oldUserData) return (<span>can't find the user</span>);\n                else return (<>{ EditUser() }</>);\n            } else {\n                return (<span>loading...</span>)\n            }\n        }\n\n        return (\n            <>\n                { renderComponents() }\n            </>\n        );\n    }\n}\n\nexport default Edit;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst EditSection = (props) => {\n    return (\n        <Link to={`/users/${props.username}/edit`}>\n            <Button className=\"button-group\" variant=\"outline-success\">Edit</Button>\n        </Link>\n    )\n} \n\nconst DeleteSection = (props) => {\n    const history = useHistory();\n    const [show, setShow] = useState(false);\n    const [disable, setDisable] = useState(false);\n    const [confirmed, setConfirmed] = useState(false);\n\n    const handleClick = async (e) => {\n        if (confirmed === false) {\n            setShow(true);\n            setDisable(true);\n        } else {\n            try {\n                axios.delete(`/app/users/${props.username}`).then((response) => {\n                    if (response.status === 200) {\n                        history.push(\"/users\");\n                    }\n                });\n            } catch (err) {\n                console.error(err);\n            }\n        }\n    };\n\n    const handleChange = (e) => {\n        if (e.target.value === props.username) {\n            setDisable(false);\n            setConfirmed(true);\n        } else {\n            setDisable(true);\n            setConfirmed(false);\n        }\n    };\n\n    return (\n        <>\n            <Button onClick={handleClick} className=\"button-group\" disabled={disable} variant=\"outline-danger\">\n                Delete\n            </Button>\n            {show ? (\n                <div>\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>\n                            Enter User's name and hit Delete again\n                        </Form.Label>\n                        <Form.Control\n                            autoFocus\n                            onChange={handleChange}\n                            name=\"confirmationtext\"\n                        ></Form.Control>\n                    </Form.Group>\n                </div>\n            ) : (\n                <></>\n            )}\n        </>\n    );\n};\n\nconst UserCard = (props) => {\n    const user = props.user;\n    const displayExpFields = () => {\n        var expFields = {\n            education: [],\n            work: []\n        };\n\n        const exp = user.experiences;\n        \n        for (const e in exp) {\n            if (exp.hasOwnProperty(e) && (e === \"education\" || e === \"work\")) {\n                expFields[e] = exp[e];\n            }\n        }\n\n        return (\n        <>\n            <p>Education:</p>\n            {expFields[\"education\"].map((e, i) => <p key={i}>{`${e.title}: ${e.value}`}</p>)}\n            <p>Work:</p>    \n            {expFields[\"work\"].map((e, i) => <p key={i}>{`${e.title}: ${e.value}`}</p>)}\n        </>\n        )\n    }\n\n    return (\n        <div className=\"info\">\n            <h1>{user.username}</h1>\n            <p>Full Name: {user.fullname}</p>\n            <p>Email: {user.email}</p>\n            <p>Birthday: {`${user.birthday.day}/${user.birthday.month}/${user.birthday.year}`}</p>\n            <p>Interests:</p>\n            <div>\n            {user.interests.map((elem, i) => (\n                <Button\n                    key={i}\n                    variant=\"outline-earthbrown\"\n                    className=\"button-group\"\n                >\n                    {elem}\n                </Button>\n            ))}\n            </div>\n            {displayExpFields()}\n        </div>\n    );\n}\n\nconst View = (props) => {\n    const [User, setUser] = useState(null);\n    const [loaded, setLoad] = useState(false);\n    const [error, setError] = useState(null);\n    const [authorized, setAuthorized] = useState(false);\n\n    useEffect(() => {\n        const handleError = (err) => {\n            // 401, 403s are expected\n            if (err.response) {\n                if (err.response.status === 403) return;\n                else if (err.response.status === 500) setError(\"internal server error\");\n                else setError(err.response.data);\n            } else {\n                setError(\"an unknown error occured\");\n            }\n            setAuthorized(false);\n            console.error(\"oh no\", err);\n        };\n\n        const checkOwnership = () => {\n            return axios.get(`/app/users/checkownership/${props.match.params.username}`)\n                .then(response => response.data)\n                .then(user => user)\n                .then(() => setAuthorized(true))\n                .catch(handleError)\n        }\n\n        axios.get(`/app/users/${props.match.params.username}`)\n            .then(response => response.data)\n            .then(user => setUser(user))\n            .then(checkOwnership)\n            .catch(handleError)\n            .finally(() => setLoad(true));\n    }, [props.match.params.username]);\n\n    \n    const renderComponents = () => {\n        const DisplayUser = () => {\n            return (\n            <>\n                <UserCard user={User} />\n                <hr />\n                { authorized && (\n                <div>\n                    <EditSection username={props.match.params.username} />\n                    <DeleteSection\n                        username={User.username}\n                    />\n                </div>\n                )}\n            </>\n            )\n        }\n        \n        if (loaded) {\n            if (error) return (<span>{error}</span>)\n            else return (<> { DisplayUser() } </>);\n        } else {\n            return (<span>loading...</span>)\n        }\n    }\n\n    return (\n        <>\n            { renderComponents() }\n        </>\n    );\n};\n\nexport default View;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Index from './Home';\nimport Edit from './Edit';\nimport View from './View';\n\nconst Users = () => {\n    return (\n        <Switch>\n            <Route exact path=\"/users\" component={Index} />\n            <Route path=\"/users/:username/edit\" component={Edit} />\n            <Route path=\"/users/:username\" component={View} />\n        </Switch>\n    );\n}\n\nexport default Users;"],"sourceRoot":""}