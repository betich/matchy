{"version":3,"sources":["Pages/Routes/Register.js"],"names":["Create","props","state","data","errors","handleSubmit","bind","handleInputChange","validateData","formData","this","setState","validate","valid","invalidData","e","preventDefault","options","headers","axios","post","then","response","status","window","flash","username","history","push","err","onSubmit","noValidate","inputChange","React","Component"],"mappings":"2PAMMA,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,KAAM,GACNC,OAAQ,IAGZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,kBAAoB,EAAKA,kBAAkBD,KAAvB,gBACzB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAVL,E,8DAaDG,GACdC,KAAKC,SAAS,CAAER,KAAMM,M,mCAGbN,GAAO,IAAD,EACgBS,YAAST,GAAhCU,EADO,EACPA,MAAOC,EADA,EACAA,YAEf,OAAID,GACAH,KAAKC,SAAS,CAAEP,OAAQ,MACjB,IAEPM,KAAKC,SAAS,CAAEP,OAAQU,KACjB,K,4EAIIC,G,sFACfA,EAAEC,iBACIb,EAAOO,KAAKR,MAAMC,K,EAEOS,YAAST,GAAhCU,E,EAAAA,MAAOC,E,EAAAA,YAEXD,GACMI,EAAU,CACZC,QAAS,CAAE,eAAgB,qBAG/BC,IAAMC,KAAK,gBAAiBjB,EAAMc,GACjCI,MAAK,SAACC,GACqB,MAApBA,EAASC,SACTC,OAAOC,MAAP,kCAAwCH,EAASnB,KAAKuB,UAAY,WAClE,EAAKzB,MAAM0B,QAAQC,KAAnB,iBAAkCN,EAASnB,KAAKuB,eAErD,SAACG,GACA,OAAQA,EAAIP,SAASC,QACjB,KAAK,IACD,EAAKZ,SAAS,CAAEP,OAAQ,CAACsB,SAAU,CAAC,qBACpC,MACJ,QACIF,OAAOC,MAAM,mBAAoB,cAI7Cf,KAAKC,SAAS,CAAEP,OAAQU,I,sIAK5B,OACI,qCACI,6CACA,cAAC,IAAD,CAAMgB,SAAUpB,KAAKL,aAAc0B,YAAU,EAA7C,SACI,cAAC,IAAD,CACIC,YAAatB,KAAKH,kBAClBH,OAAQM,KAAKR,MAAME,OACnBQ,SAAUF,KAAKF,wB,GArElByB,IAAMC,WA6EZlC","file":"static/js/15.94a3870d.chunk.js","sourcesContent":["import axios from 'axios';\nimport React from 'react';\nimport { Form } from 'react-bootstrap';\nimport validate from \"../../Services/Validate\";\nimport UserForm from \"../../Components/Form/User\";\n\nclass Create extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: {},\n            errors: {}\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.validateData = this.validateData.bind(this);\n    }\n\n    handleInputChange(formData) {\n        this.setState({ data: formData });\n    }\n\n    validateData(data) {\n        const { valid, invalidData } = validate(data);\n\n        if (valid) {\n            this.setState({ errors: {} });\n            return true;\n        } else {\n            this.setState({ errors: invalidData });\n            return false;\n        }\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        const data = this.state.data;\n\n        const { valid, invalidData } = validate(data);\n\n        if (valid) {\n            const options = {\n                headers: { \"Content-Type\": \"application/json\" },\n            };\n            \n            axios.post('/app/register', data, options)\n            .then((response) => {\n                if (response.status === 200) {\n                    window.flash(`Successfully registered ${response.data.username}`, 'success');\n                    this.props.history.push(`/users/${response.data.username}`);\n                }\n            }, (err) => {\n                switch (err.response.status) {\n                    case 409:\n                        this.setState({ errors: {username: ['username taken']}});\n                        break;\n                    default:\n                        window.flash('An error occured', 'error');\n                }\n            });\n        } else {\n            this.setState({ errors: invalidData });\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <h1>Create User</h1>\n                <Form onSubmit={this.handleSubmit} noValidate>\n                    <UserForm\n                        inputChange={this.handleInputChange}\n                        errors={this.state.errors}\n                        validate={this.validateData}\n                    />\n                </Form>\n            </>\n        );\n    }\n}\n\nexport default Create;\n"],"sourceRoot":""}