{"version":3,"sources":["Services/Validate.js","Components/Error.js","Services/getUser.js","Components/Tag.js","Components/Required.js","Services/Mock.js","Components/QAForm.js","Components/ProjectCard.js","Pages/Routes/Projects/Home.js","Components/Form/Project.js","Pages/Routes/Projects/Create.js","Pages/Routes/Projects/Edit.js","Components/ViewAnswers.js","Pages/Routes/Projects/View.js","Pages/Routes/Projects/Index.js"],"names":["validate","formData","invalidData","addToInvalid","key","errMsg","push","Object","entries","value","match","length","undefined","projectMatch","some","e","day","month","year","Date","getUTCFullYear","valid","keys","constructor","Error","props","ErrorMessages","errors","map","i","name","join","variant","a","axios","get","res","Result","data","console","error","getUser","Tag","useState","startState","clicked","setClick","firstRender","useRef","useEffect","current","tagChange","onChange","label","className","onClick","Tags","state","tags","initialState","bind","forEach","elem","onAsDefault","this","setState","checked","newTags","idx","findIndex","concat","slice","modifyTags","group","TagButtons","React","Component","Required","style","color","TagsList","EducationOptions","ViewOneForm","Group","Label","question","Control","target","CreateOneForm","Question","setQuestion","update","placeholder","newQuestion","disabled","deleting","FillQA","emptyAnswers","project","questions","reduce","obj","answers","setAnswers","setError","Project","Questions","handleChange","newAnswers","preventDefault","cucumber","values","post","_id","headers","then","catch","err","response","status","finally","onSubmit","CreateQA","QuestionList","setQuestionList","FormChange","filter","ProjectCard","Owner","owner","Workers","workers","Card","bg","text","width","Body","Title","Text","username","description","Button","to","url","type","Index","Projects","setProjects","currentUser","setUser","loaded","setLoad","user","reqUser","projects","MyProjects","WorkingProjects","worker","id","ProjectForm","oldData","projectname","inputChange","formQAChange","form","Form","Row","as","Col","sm","required","Create","handleSubmit","handleInputChange","options","window","flash","history","noValidate","Edit","oldProject","params","put","newurl","ViewOneAnswer","handleClose","close","Modal","show","on","onHide","Header","closeButton","fullname","Footer","ViewAnswerSection","setShow","showModal","setShowModal","setIdx","raw","responses","viewtable","Table","ans","setModal","responseId","ProjectView","EditSection","DeleteSection","useHistory","disable","setDisable","confirmed","setConfirmed","handleClick","delete","autoFocus","confirmationText","View","setProject","authorized","setAuthorized","handleError","reRender","exact","path","component"],"mappings":"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","file":"static/js/7.eca4077b.chunk.js","sourcesContent":["const validate = (formData) => {\n    let invalidData = {};\n\n    const addToInvalid = (key, errMsg) => {\n        if (key in invalidData) {\n            invalidData[key].push(errMsg);\n        } else {\n            invalidData[key] = [errMsg];\n        }\n    };\n\n    const getCurrentYear = () => {\n        var dateObj = new Date();\n        var year = dateObj.getUTCFullYear();\n\n        return year;\n    };\n\n    for (const [key, value] of Object.entries(formData)) {\n        switch (key) {\n            case \"username\":\n                const usernameRegex = /[^a-zA-Z0-9]/g;\n                const usernameMatch = value.match(usernameRegex);\n                if (usernameMatch) {\n                    addToInvalid(\"username\", \"username contains special characters\");\n                }\n                if (value.length < 2 || value.length > 30) {\n                    addToInvalid(\"username\", \"username length must be 2-30 characters long\");\n                }\n                if (value.length === 0) {\n                    addToInvalid(\"username\", \"no username specified\");\n                }\n                break;\n\n            case \"fullname\":\n                const nameRegex = /^([a-zA-Z0-9]+|[a-zA-Z0-9]+\\s{1}[a-zA-Z0-9]{1,}|[a-zA-Z0-9]+\\s{1}[a-zA-Z0-9]{3,}\\s{1}[a-zA-Z0-9]{1,})$/;\n                const fullnameMatch = value.match(nameRegex);\n\n                if (!fullnameMatch) {\n                    addToInvalid(\"fullname\", \"unsupported name format\");\n                }\n                break;\n\n            case \"login\":\n                break;\n\n            case \"description\":\n                break;\n\n            case \"email\":\n                const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                const emailMatch = value.match(emailRegex);\n\n                if (!emailMatch) {\n                    addToInvalid(\"email\", \"invalid email format\");\n                }\n                break;\n\n            case \"password\":\n                if (value === undefined) break;\n                const passwordRegex = /^(?=.*[a-z])(?=.*\\d).{8,}$/;\n                const passwordMatch = value.match(passwordRegex);\n\n                if (!passwordMatch) {\n                    addToInvalid(\"password\", \"password must contain a minimum of eight characters, and at least one letter and one number:\")\n                }\n                break;\n            \n            case \"projectname\":\n                const projectRegex = /[^A-Za-z0-9\\s]/;\n                const projectMatch = value.match(projectRegex);\n                if (!value) {\n                    addToInvalid(\"projectname\", \"project name must not be empty\");\n                }\n                else if (projectMatch) {\n                    addToInvalid(\"projectname\", \"project name contains special characters\");\n                }\n                break;\n\n            case \"cucumber\":\n                if (value.some((e) => e === \"\")) {\n                    addToInvalid(\"formfield\", \"fill all the fields dumbass\");\n                }\n                break;\n\n            case \"interests\":\n                break;\n\n            case \"experiences\":\n                break;\n\n            case \"questions\":\n                break;\n\n            case \"tags\":\n                if ( value.length === 0 ) {\n                    addToInvalid(\"Tags\", \"at least one tag is required\");\n                }\n                break;\n\n            case \"birthday\":\n                //check birthday\n                const {day, month, year} = value;\n                const dayCount = [\n                    31,28,31,30,31,30,31,31,30,31,30,31,\n                ];\n\n                if (!day || !month || !year) {\n                    addToInvalid(\"birthday\", \"fill out all fields\")\n                }\n\n                //check day\n                if (month === 2) {\n                    // is leap year\n                    if (\n                        (0 === year % 4 && 0 !== year % 100) ||\n                        0 === year % 400\n                    ) {\n                        if (day > 29 || day < 1) {\n                            addToInvalid(\"birthday\", \"invalid day\");\n                        }\n                    } else {\n                        if (day > 28 || day < 1) {\n                            addToInvalid(\"birthday\", \"invalid day\");\n                        }\n                    }\n                } else {\n                    if (day > dayCount[month - 1]) {\n                        addToInvalid(\"birthday\", \"invalid day\");\n                    }\n                }\n\n                //check year\n                if (year > getCurrentYear()) {\n                    addToInvalid(\"birthday\", \"invalid year\");\n                }\n                break;\n\n            default:\n                addToInvalid(\"invalidKey\", [key, value]);\n                break;\n        }\n    }\n\n    // check if object is empty, returns true are there is no keys in err\n    let valid = Object.keys(invalidData).length === 0 && invalidData.constructor === Object;\n    return { valid: valid, invalidData: invalidData };\n};\n\nexport default validate;\n","import { Alert } from 'react-bootstrap';\n\n/* ==============================================================\n    <Error errors=Object />\n    Displays errors\n    \n=================================================================== */\n\nconst Error = (props) => {\n    let ErrorMessages = (Object.keys(props.errors).length === 0 && props.errors.constructor === Object)\n        ? ''\n        : Object.entries(props.errors)\n        .map(([key, name], i) => {\n            return (\n                <p key={i}>\n                    {`${key}:\\n${name.join(',\\n')}`}\n                </p>\n            )\n        });\n    \n    return (\n        <>\n        { (ErrorMessages !== '')\n            ? (\n                <Alert variant='danger'>\n                    <pre>{ErrorMessages}</pre>\n                </Alert>\n            ) : (\n            <></>\n        )}\n        </>\n    );\n};\n\nexport default Error;","import axios from 'axios';\n\n// returns { user }\n\nasync function getUser () {\n    let Result;\n\n    try {\n        let res = await axios.get('/app/users/me');\n        Result = res.data;\n    }\n    catch (err) {\n        console.error(err);\n        Result = null;\n    }\n\n    return Result;\n}\n\nexport default getUser","import React, { useState, useEffect, useRef } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\n/* ==============================================================\n    <Tags onChange={} group=String tags=Array [onAsDefault=Array] />\n    group: general grouping\n    label: individual label\n    onAsDefault: array of string of tags that is clicked as initalized\n    \n    onChange(group, tags) {\n        \n    }\n=================================================================== */\n\nconst Tag = (props) => {\n    const [clicked, setClick] = useState(props.startState);\n    const firstRender = useRef(true);\n\n    const handleClick = (e) => {\n        setClick(!clicked);\n    };\n\n    useEffect(() => {\n        if (firstRender.current) {\n            firstRender.current = false;\n        } else {\n            const tagChange = props.onChange;\n            tagChange(props.label, clicked);\n        }\n    }, [clicked, props.label, props.onChange]);\n\n    return (\n        <Button\n            className=\"m-1\"\n            variant={!clicked ? \"outline-earthbrown\" : \"earthbrown\"}\n            onClick={handleClick}\n        >\n            {props.label}\n        </Button>\n    );\n};\n\nclass Tags extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            tags: [],\n        };\n        this.initialState = {};\n        this.tagChange = this.tagChange.bind(this);\n        this.props.tags.forEach((elem) => (this.initialState[elem] = false));\n        this.props.onAsDefault?.forEach((elem) => {\n            this.initialState[elem] = true;\n        });\n    }\n\n    // set initial state\n    componentDidMount() {\n        if ( this.props.onAsDefault && this.props.onAsDefault.length > 0 )\n        this.setState({ tags: this.props.onAsDefault });\n    }\n\n    tagChange(label, checked) {\n        let newTags;\n        const modifyTags = (tags) => {\n            let idx = tags.findIndex((e) => e === label);\n            return checked\n                ? tags.concat(label)\n                : tags.slice(0, idx).concat(tags.slice(idx + 1, tags.length));\n        };\n        newTags = modifyTags(this.state.tags);\n        this.setState({ tags: newTags }, () => {\n            this.props.onChange(this.props.group, this.state.tags);\n        });\n    }\n\n    render() {\n        let TagButtons = [];\n        for (const key in this.initialState) {\n            TagButtons.push(\n                <Tag\n                    onChange={this.tagChange}\n                    group={this.props.group}\n                    label={key}\n                    key={key}\n                    startState={this.initialState[key]}\n                />\n            );\n        }\n        // const TagButtons = this.props.tags.map((item, i) => {\n        //     const startState = this.props.onAsDefault?.includes(item) || false;\n        //     return (\n        //         <Tag onChange={this.tagChange} group={this.props.group} label={item} key={i} startState={startState} />\n        //     );\n        // });\n\n        return <>{TagButtons}</>;\n    }\n}\n\nexport default Tags;","const Required = (props) => {\n    return (\n        <span style={{color: \"red\"}}>*</span>\n    )\n}\n\nexport default Required;","const TagsList = ['Website Design', 'E-Sports', 'Video Editing', 'Photography', 'Transportation', 'Tourism', 'Technology', 'Supplier', 'Subscription', 'Store', 'Sports', 'Software', 'Pets', 'Organization', 'Logistics', 'Insurance', 'Health', 'Games', 'Food', 'Fintech', 'Farm', 'Environment', 'Entertainment', 'Education', 'eCommerce', 'Delivery', 'Dealer', 'Construction', 'Cafe', 'Beauty', 'Audit', 'Art', 'Animal', 'AI', 'Agency'];\n\nconst EducationOptions = ['Middle School', 'High School', 'University', 'College'];\n\nexport { TagsList, EducationOptions }; ","import { Button, Form } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport validate from \"../Services/Validate\";\nimport Error from './Error';\n\n/* ==============================================================\n    <Error errors=Object />\n    Displays errors\n    \n    <QAForm type=type onChange=function questions={[{value: String, type: type}, ...]} />\n    \n=================================================================== */\n\nconst ViewOneForm = (props) => {\n    const handleChange = (e) => {\n        props.onChange(props.question.value, e.target.value);\n    }\n\n    return <>\n        <Form.Group>\n            <Form.Label>{props.question.value}</Form.Label>\n            <Form.Control onChange={handleChange} />\n        </Form.Group>\n    </>\n    \n}\n\nconst CreateOneForm = (props) => {\n    const [Question, setQuestion] = useState(props.value);\n    const update = props.onChange;\n\n    const handleChange = (e) => {\n        const newQuestion = { ...Question, value: e.target.value };\n        setQuestion(newQuestion);\n        update(newQuestion)\n    };\n\n    const handleDelete = () => {\n        const newQuestion = { ...Question, deleting: true };\n        setQuestion(newQuestion);\n        update(newQuestion)\n    };\n\n    return (\n        <>\n            <Form.Control\n                placeholder=\"Question\"\n                onChange={handleChange}\n                value={props.value.value}\n            ></Form.Control>\n            <Form.Control placeholder=\"Answer\" disabled></Form.Control>\n            <Button variant=\"danger\" onClick={handleDelete}>Delete</Button>\n        </>\n    );\n};\n\nconst FillQA = (props) => {\n    const emptyAnswers = props.project.questions.reduce((map, obj) => {\n        map[obj.value] = \"\";\n        return map;\n    }, {});\n\n    const [answers, setAnswers] = useState(emptyAnswers);\n    const [errors, setError] = useState({});\n\n    const Project = props.project;\n    const Questions = Project.questions;\n    \n    const handleChange = (key, value) => {\n        const newAnswers =  { ...answers, [ key ]: value};\n        setAnswers(newAnswers);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const data = { cucumber: Object.values((answers)) };\n        const { valid, invalidData } = validate(data);\n\n        if (valid) {\n            const options = {\n                headers: { \"Content-Type\": \"application/json\" },\n            };\n            \n            axios\n                .post(\n                    `/app/projects/answer/${Project._id}`,\n                    answers,\n                    options\n                )\n                .then((res) => res.data)\n                .catch((err) => {\n                    switch (err.response.status) {\n                        case 409:\n                            setError({ errors: {project: ['duplicate project']}});\n                            break;\n                        default:\n                            console.error(err);\n                    }\n                })\n                .finally(() => {\n                    if (props.onSubmit) props.onSubmit();\n                });\n        } else {\n            setError(invalidData);\n        }\n    };\n\n    return <>\n        <Form>\n            {Questions.map((elem, idx) => {\n                return <ViewOneForm\n                    key={idx}\n                    question={elem}\n                    onChange={handleChange}\n                />\n            })}\n            <Error errors={errors} />\n            <Button\n                onClick={handleSubmit}\n                variant=\"info\"\n            >\n                Submit answer\n            </Button>\n        </Form>\n    </>;\n};\n\nconst CreateQA = (props) => {\n    const [QuestionList, setQuestionList] = useState([]);\n\n    const handleChange = (idx, value) => {\n        var current = QuestionList;\n        current[idx] = value;\n        current = current.filter(\n            (e) => !(\"deleting\" in e) || e.deleting === false\n        );\n        setQuestionList(current);\n    };\n\n    const createForm = () => {\n        setQuestionList([...QuestionList, { value: \"\" }]);\n    };\n\n    useEffect(() => {\n        const FormChange = props.onChange;\n        FormChange(QuestionList);\n    }, [QuestionList, props.onChange]);\n\n    const Questions = QuestionList.map((elem, idx) => {\n        return (\n            <CreateOneForm\n                key={idx}\n                value={elem}\n                onChange={(value) => handleChange(idx, value)}\n            />\n    )});\n\n    return (\n        <>\n            <Button onClick={createForm} variant=\"outline-info\">Create</Button>\n            {Questions}\n        </>\n    );\n};\n\nexport { FillQA, CreateQA };\n","import { Link } from 'react-router-dom';\nimport { Card, Button } from 'react-bootstrap';\n\nconst ProjectCard = (props) => {\n    const Project = props.project;\n    const Owner = Project.owner;\n    const Workers = Project.workers;\n\n    const renderCard = () => {\n        if (Project && Owner && Workers) {\n            return (\n                <Card\n                    bg=\"white\"\n                    text=\"black\"\n                    style={{ width: '18rem' }}\n                    className=\"mb-2\"\n                    >\n                    <Card.Body>\n                        <Card.Title>{Project.name}</Card.Title>\n                        <Card.Text><i>by {Owner.username}</i></Card.Text>\n                        <Card.Text>{Project.description}</Card.Text>\n                        <Card.Text>tags:</Card.Text>\n                        <Card.Text>\n                        {Project.tags.map((elem, i) => (\n                            <Button\n                                key={i}\n                                variant=\"outline-earthbrown\"\n                            >\n                                {elem}\n                            </Button>\n                        ))}\n                        </Card.Text>\n                        <Link to={`/projects/${Project.owner.username}/${Project.url}`}>\n                            <Button variant=\"outline-info\" type=\"submit\">\n                                View\n                            </Button>\n                        </Link>\n                    </Card.Body>\n                </Card>\n            )\n        }\n        else {\n            return (<span>can't display the project</span>)\n        }\n    }\n\n    return (\n        <>\n        { renderCard() }\n        </>\n    )\n}\n\nexport default ProjectCard;","import { Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport getUser from '../../../Services/getUser';\nimport axios from 'axios';\nimport ProjectCard from '../../../Components/ProjectCard';\n\nconst Index = (props) => {\n    const [Projects, setProjects] = useState([]);\n    const [currentUser, setUser] = useState(null);\n    const [loaded, setLoad] = useState(false);\n    const [error, setError] = useState(null); \n    \n    useEffect(() => {\n        const reqUser = async () => {\n            let user = await getUser();\n            if (user) setUser(user);\n            else setError(\"You have to be logged in first\"); \n        }\n\n        reqUser();\n\n        axios.get(`/app/projects`)\n            .then((res) => res.data)\n            .then((projects) => {\n                setProjects(projects);\n            })\n            .catch((err) => {\n                if (err.response) {\n                    if (err.response.status === 500) setError(\"Internal server error\");\n                    else setError(err.response.data);\n                } else {\n                    setError(\"An error occured\");\n                }\n\n                console.error(err)\n            })\n            .finally(() => setLoad(true))\n    }, []);\n\n    let MyProjects = Projects.filter((project) => project.owner.username === currentUser.username);\n    let WorkingProjects = Projects.filter((project) => project.workers.some((worker) => {\n        return worker.username === currentUser.username\n    }));\n\n    MyProjects = MyProjects.map((project) => <ProjectCard project={project} key={project._id} />);\n    WorkingProjects = WorkingProjects.map((project) => <ProjectCard project={project} key={project._id} />);\n    \n    const renderComponents = () => {\n        const HomeProject = () => {\n            return (\n                <>\n                    <h1>Projects</h1>\n                    <Link to=\"/projects/create\">\n                        <Button variant=\"outline-danger\" type=\"submit\">\n                            Create\n                        </Button>\n                    </Link>\n                    <div id=\"projectLinks\">\n                        <h4>Your Projects</h4>\n                        <div className=\"d-flex flex-wrap\">\n                            {MyProjects}\n                        </div>\n                        <h4>Projects you're working with</h4>\n                        <div className=\"d-flex flex-wrap\">\n                            {WorkingProjects}\n                        </div>\n                    </div>\n                </>\n            );\n        }\n\n        if (loaded) {\n            if (error) return (<span>{error}</span>);\n            else return (<> { HomeProject() } </>);\n        } else {\n            return (<span>loading...</span>)\n        }\n    }\n\n    return (\n        <>\n            { renderComponents() }\n        </>\n    );\n}\n\nexport default Index;","import React from \"react\";\nimport { Form, Col } from \"react-bootstrap\";\nimport Tags from \"../Tag\";\nimport Required from '../Required';\nimport { TagsList } from \"../../Services/Mock\";\nimport { CreateQA } from \"../../Components/QAForm\";\n\nclass ProjectForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let oldData = this.props.oldData;\n        // prettier-ignore\n        this.state = ( oldData )\n            ? {\n                  projectname: oldData.name,\n                  description: oldData.description,\n                  tags: oldData.tags,\n                  questions: oldData.questions,\n              }\n            : {\n                  projectname: \"\",\n                  description: \"\",\n                  tags: [],\n                  questions: [],\n              };\n\n        this.tagChange = this.tagChange.bind(this);\n        this.inputChange = this.inputChange.bind(this);\n        this.formQAChange = this.formQAChange.bind(this);\n    }\n\n    inputChange(e) {\n        this.setState({ [e.target.name]: e.target.value }, () => {\n            this.props.inputChange(this.state);\n        });\n    }\n\n    formQAChange(form) {\n        this.setState({ questions: form }, () => {\n            this.props.inputChange(this.state);\n        });\n    }\n\n    tagChange(group, tags) {\n        switch (group) {\n            case \"projectTags\":\n                this.setState({ tags: tags }, () => {\n                    this.props.inputChange(this.state);\n                });\n                break;\n            default:\n                console.error(\"unknown tag group\");\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Form.Row>\n                    <Form.Group as={Col} sm={12}>\n                        <Form.Label>Project name <Required /></Form.Label>\n                        <Form.Control\n                            name=\"projectname\"\n                            required\n                            type=\"text\"\n                            placeholder=\"Example project\"\n                            value={this.state.projectname}\n                            onChange={this.inputChange}\n                        />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} sm={12}>\n                        <Form.Label>Description <Required /></Form.Label>\n                        <Form.Control\n                            name=\"description\"\n                            placeholder=\"Description\"\n                            value={this.state.description}\n                            onChange={this.inputChange}\n                        />\n                    </Form.Group>\n                </Form.Row>\n\n                <Form.Row>\n                    <Form.Group as={Col} sm={12} className=\"mb-3\">\n                        <Form.Label>Tags: <Required /></Form.Label>\n                        <Tags\n                            onChange={this.tagChange}\n                            tags={TagsList}\n                            group=\"projectTags\"\n                            onAsDefault={this.state.tags}\n                        />\n                    </Form.Group>\n                </Form.Row>\n                <Form.Group>\n                    <Form.Label>Question and Answer</Form.Label>\n                    <CreateQA onChange={this.formQAChange} />\n                </Form.Group>\n            </>\n        );\n    }\n}\n\nexport default ProjectForm;\n","import axios from 'axios';\nimport React from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport validate from \"../../../Services/Validate\";\nimport Error from \"../../../Components/Error\";\nimport ProjectForm from \"../../../Components/Form/Project\";\n\nclass Create extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n            errors: {}\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    handleInputChange(formData) {\n        this.setState({ data: formData });\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        const data = this.state.data;\n\n        let { valid, invalidData } = validate(data);\n\n        if (valid) {\n            const options = {\n                headers: {'Content-Type': 'application/json' }\n            };\n            \n            axios.post('/app/projects', data, options)\n                .then((res) => {\n                    if (res.status === 200) {\n                        window.flash(`Created ${res.data.name}`, 'success');\n                        this.props.history.push(\n                            `/projects/${res.data.owner.username}/${res.data.url}`\n                        );\n                    }\n                })\n                .catch((err) => {\n                    switch (err.response.status) {\n                        case 409:\n                            this.setState({ errors: {projectname: ['project name taken']}});\n                            break;\n                        default:\n                            window.flash('An error occured', 'error');\n                            console.error(err);\n                    }\n                });\n        } else {\n            this.setState({ errors: invalidData });\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <h1>Create a Project</h1>\n                <Form onSubmit={this.handleSubmit} noValidate>\n                    <ProjectForm inputChange={this.handleInputChange} />\n                    <Error errors={this.state.errors} />\n\n                    <Button variant=\"info\" type=\"submit\">\n                        Create\n                    </Button>\n                </Form>\n            </>\n        );\n    }\n}\n\nexport default Create;\n","import axios from 'axios';\nimport React from 'react';\nimport { Form, Button } from \"react-bootstrap\";\nimport validate from \"../../../Services/Validate\";\nimport Error from \"../../../Components/Error\";\nimport ProjectForm from \"../../../Components/Form/Project\";\n\nclass Edit extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: {},\n            errors: {},\n            loaded: false,\n            oldProject: null,\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleInputChange = this.handleInputChange.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get(`/app/projects/i/${this.props.match.params.id}`)\n            .then((res) => res.data)\n            .then((project) => {\n                this.setState({ oldProject: project });\n                this.setState({ tags: project.tags });\n            })\n            .catch((err) => {\n                console.error(err);\n            })\n            .finally(() => this.setState({ loaded: true }));\n    }\n\n    handleInputChange(formData) {\n        this.setState({ data: formData });\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault();\n        this.setState({ errors: {} });\n        const data = this.state.data;\n\n        let { valid, invalidData } = validate(data);\n\n        if (valid) {\n            const options = {\n                headers: { \"Content-Type\": \"application/json\" },\n            };\n            axios.put(`/app/projects/${this.props.match.params.id}`, data, options).then(\n                (res) => {\n                    if (res.status === 200) {\n                        window.flash(`Edited ${res.data.name}`, 'success');\n                        this.props.history.push(\n                            `/projects/${res.data.owner}/${res.data.newurl}`\n                        );\n                    }\n                },\n                (err) => {\n                    window.flash('An error occured', 'error');\n                    console.error(err);\n                }\n            );\n        } else {\n            this.setState({ errors: invalidData });\n        }\n    }\n\n    render() {\n        const renderComponents = () => {\n            const EditProject = () => {\n                return (\n                    <>\n                        <h1>Edit Project</h1>\n                        <Form onSubmit={this.handleSubmit}>\n                            <ProjectForm inputChange={this.handleInputChange} oldData={this.state.oldProject} />\n                            <Error errors={this.state.errors} />\n                \n                            <Button variant=\"info\" type=\"submit\">\n                                Save Edit\n                            </Button>\n                        </Form>\n                    </>\n                );\n            }\n            \n            if (this.state.loaded) {\n                if (!this.state.oldProject) return (<span>can't find the project</span>);\n                else return (<>{ EditProject() }</>);\n            } else {\n                return (<span>loading...</span>)\n            }\n        }\n\n        return (\n            <>\n                { renderComponents() }\n            </>\n        );\n    }\n}\n\nexport default Edit;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, Modal, Table } from \"react-bootstrap\";\n\nconst ViewOneAnswer = (props) => {\n    if (props.idx === -1) {\n        return <></>;\n    }\n    const handleClose = () => props.close();\n    const { user = {}, answers = {} } = props.answers[props.idx];\n\n    const response = Object.keys(answers).map((key, i) => {\n        return (\n            <div key={i}>\n                {key + \": \" + answers[key]}\n                <br />\n            </div>\n        );\n    });\n\n    return (\n        <>\n            <Modal show={props.on} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>{user.fullname + \"'s Answer\"}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{response}</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </>\n    );\n};\n\nconst ViewAnswerSection = (props) => {\n    const [answers, setAnswers] = useState([]);\n    const [show, setShow] = useState(false);\n    const [showModal, setShowModal] = useState(false);\n    const [idx, setIdx] = useState(-1);\n    // rendered component\n\n    useEffect(() => {\n        axios\n            .get(`/app/projects/answer/${props.id}`)\n            .then((raw) => raw.data)\n            .then((responses) => setAnswers(responses))\n            .catch((err) => console.error(err));\n    }, [props.id, show]);\n\n    const handleClick = () => setShow(!show);\n    const handleClose = () => setShowModal(false);\n\n    const setModal = (idx) => {\n        setIdx(idx);\n        setShowModal(true);\n    };\n\n    const acceptUser = (responseId) => {\n        axios\n            .get(`/app/projects/accept/${props.id}?r=${responseId}`)\n            .then((raw) => raw.data)\n            .then((responses) => setAnswers(responses))\n            .catch((err) => console.error(err))\n            .finally(() => props.onChange())\n    }\n\n    const rejectUser = (responseId) => {\n        axios\n            .get(`/app/projects/reject/${props.id}?r=${responseId}`)\n            .then((raw) => raw.data)\n            .then((responses) => setAnswers(responses))\n            .catch((err) => console.error(err))\n            .finally(() => props.onChange())\n    }\n\n    const viewtable = (\n        <>\n            <Table>\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Username</th>\n                        <th>Answer</th>\n                        <th>Accept</th>\n                        <th>Reject</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {answers.map((ans, idx) => {\n                        return (\n                            <tr key={ans._id}>\n                                <td>{idx + 1}</td>\n                                <td>{ans.user.username}</td>\n                                <td>\n                                    <Button\n                                        variant=\"info\"\n                                        onClick={() => setModal(idx)}\n                                    >\n                                        Show\n                                    </Button>\n                                </td>\n                                <td>\n                                    <Button\n                                        variant=\"success\"\n                                        onClick={() => acceptUser(ans._id)}\n                                    >\n                                        Accept\n                                    </Button>\n                                </td>\n                                <td>\n                                    <Button\n                                        variant=\"danger\"\n                                        onClick={() => rejectUser(ans._id)}\n                                    >\n                                        Reject\n                                    </Button>\n                                </td>\n                            </tr>\n                        );\n                    })}\n                </tbody>\n            </Table>\n        </>\n    );\n\n    return (\n        <>\n            <Button\n                variant=\"info\"\n                onClick={handleClick}\n            >\n                Show answers\n            </Button>\n            <ViewOneAnswer\n                idx={idx}\n                answers={answers}\n                on={showModal}\n                close={handleClose}\n            />\n            {show && <>{viewtable}</>}\n        </>\n    );\n};\n\nexport default ViewAnswerSection;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport ViewAnswerSection from \"../../../Components/ViewAnswers\";\n\nconst ProjectView = (props) => {\n    const Project = props.project;\n    const Owner = Project.owner;\n    const Workers = Project.workers;\n\n    const renderCard = () => {\n        if (Project && Owner && Workers) {\n            return (\n                <Card\n                    bg=\"white\"\n                    text=\"black\"\n                    style={{ width: \"18rem\" }}\n                    className=\"mb-2\"\n                >\n                    <Card.Body>\n                        <Card.Title>{Project.name}</Card.Title>\n                        <Card.Text>by {Owner.username}</Card.Text>\n                        <Card.Text>{Project.description}</Card.Text>\n                        <Card.Text>\n                            employees:{\" \"}\n                            {Workers.map((e) => <span key={e._id}><Link to={`/users/${e.username}`}>{e.username}</Link>, </span>)}\n                        </Card.Text>\n                        <Card.Text>tags:</Card.Text>\n                        <Card.Text>\n                            {Project.tags.map((elem, i) => (\n                                <Button key={i} variant=\"outline-earthbrown\">\n                                    {elem}\n                                </Button>\n                            ))}\n                        </Card.Text>\n                    </Card.Body>\n                </Card>\n            );\n        } else {\n            return <span>can't display the project</span>;\n        }\n    };\n\n    return <>{renderCard()}</>;\n};\n\nconst EditSection = (props) => {\n    return (\n        <Link to={`/projects/edit/${props.id}`}>\n            <Button variant=\"outline-info\">Edit</Button>\n        </Link>\n    );\n};\n\nconst DeleteSection = (props) => {\n    const history = useHistory();\n    const [show, setShow] = useState(false);\n    const [disable, setDisable] = useState(false);\n    const [confirmed, setConfirmed] = useState(false);\n\n    const handleClick = async (e) => {\n        if (confirmed === false) {\n            setShow(true);\n            setDisable(true);\n        } else {\n            try {\n                axios.delete(`/app/projects/${props.id}`).then((response) => {\n                    if (response.status === 200) {\n                        history.push(\"/projects\");\n                    }\n                });\n            } catch (err) {\n                console.error(err);\n            }\n        }\n    };\n\n    const handleChange = (e) => {\n        if (e.target.value === props.confirmationText) {\n            setDisable(false);\n            setConfirmed(true);\n        } else {\n            setDisable(true);\n            setConfirmed(false);\n        }\n    };\n    return (\n        <>\n            <Button\n                onClick={handleClick}\n                disabled={disable}\n                variant=\"outline-danger\"\n            >\n                Delete\n            </Button>\n            {show && (\n                <div>\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>\n                            Enter project's name and hit Delete again\n                        </Form.Label>\n                        <Form.Control\n                            autoFocus\n                            onChange={handleChange}\n                            name=\"confirmationtext\"\n                        ></Form.Control>\n                    </Form.Group>\n                </div>\n            )}\n        </>\n    );\n};\n\nconst View = (props) => {\n    const [Project, setProject] = useState(null);\n    const [loaded, setLoad] = useState(false);\n    const [error, setError] = useState(null);\n    const [authorized, setAuthorized] = useState(false);\n\n    useEffect(() => {\n        const handleError = (err) => {\n            // 401, 403s are expected\n            if (err.response) {\n                if (err.response.status === 403) return;\n                else if (err.response.status === 500) {\n                    return setError(\"Internal server error\");\n                }\n                else setError(err.response.data);\n            } else {\n                setError(\"An unknown error occured\");\n            }\n            setAuthorized(false);\n            console.error(err);\n        };\n\n        const checkOwnership = (id) => {\n            return axios\n                .get(`/app/projects/checkownership/${id}`)\n                .then((response) => response.data)\n                .then((user) => user)\n                .then(() => setAuthorized(true))\n                .catch(handleError);\n        };\n\n        axios\n            .get(\n                `/app/projects/${props.match.params.user}/${props.match.params.project}`\n            )\n            .then((response) => response.data)\n            .then((project) => {\n                setProject(project);\n                checkOwnership(project._id);\n            })\n            .catch(handleError)\n            .finally(() => setLoad(true));\n    }, [props.match.params.project, props.match.params.user]);\n\n    const haveQuestion = () => {\n        return Project.questions.length > 0;\n    };\n\n    const reRender = () => {\n        setLoad(false);\n\n        const handleError = (err) => {\n            // 401, 403s are expected\n            if (err.response) {\n                if (err.response.status === 403) return;\n                else if (err.response.status === 500)\n                    return setError(\"Internal server error\");\n                else setError(err.response.data);\n            } else {\n                setError(\"An unknown error occured\");\n            }\n            setAuthorized(false);\n            console.error(err);\n        };\n\n        axios\n            .get(\n                `/app/projects/${props.match.params.user}/${props.match.params.project}`\n            )\n            .then((response) => response.data)\n            .then((project) => {\n                setProject(project);\n            })\n            .catch(handleError)\n            .finally(() => setLoad(true));\n    }\n\n    const renderComponents = () => {\n        const ViewProject = () => {\n            return (\n                <>\n                    <h1>{Project.name}</h1>\n                    <ProjectView project={Project} />\n                    {authorized && (\n                        <>\n                            {haveQuestion() ? (\n                                <div>\n                                    <ViewAnswerSection onChange={reRender} id={Project._id} />\n                                </div>\n                            ) : (\n                                <></>\n                            )}\n                            <div>\n                                <EditSection id={Project._id} />\n                                <DeleteSection\n                                    id={Project._id}\n                                    confirmationText={Project.name}\n                                />\n                            </div>\n                        </>\n                    )}\n                </>\n            );\n        };\n\n        if (loaded) {\n            if (error) return <span>{error}</span>;\n            else return <> {ViewProject()} </>;\n        } else {\n            return <span>loading...</span>;\n        }\n    };\n\n    return <>{renderComponents()}</>;\n};\n\nexport default View;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Index from './Home';\nimport Create from './Create';\nimport Edit from './Edit';\nimport View from './View';\n\nconst Projects = () => {\n    return (\n      <Switch>\n        <Route exact path=\"/projects\" component={Index} />\n        <Route path=\"/projects/create\" component={Create} />\n        <Route path=\"/projects/edit/:id\" component={Edit} />\n        <Route path=\"/projects/:user/:project\" component={View} />\n      </Switch>\n    )\n}\n\nexport default Projects;"],"sourceRoot":""}