{"version":3,"sources":["Services/Validate.js","Components/Error.js","Components/QAForm.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","Pages/Routes/Match/Project.js","Pages/Routes/Match/Form.js","Pages/Routes/Match/Home.js","Pages/Routes/Match/Index.js"],"names":["validate","formData","invalidData","addToInvalid","key","errMsg","push","Object","entries","value","match","length","undefined","projectMatch","some","e","day","month","year","Date","getUTCFullYear","valid","keys","constructor","Error","props","ErrorMessages","errors","map","i","name","join","variant","ViewOneForm","Group","Label","question","Control","onChange","target","CreateOneForm","useState","Question","setQuestion","update","placeholder","newQuestion","disabled","onClick","deleting","FillQA","emptyAnswers","project","questions","reduce","obj","answers","setAnswers","setError","Project","Questions","handleChange","newAnswers","elem","idx","preventDefault","data","cucumber","values","axios","post","_id","headers","then","res","catch","err","response","status","console","error","finally","onSubmit","CreateQA","QuestionList","setQuestionList","useEffect","FormChange","current","filter","CardImg","React","forwardRef","_ref","ref","bsPrefix","className","_ref$as","as","Component","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","ViewProject","Owner","owner","Workers","workers","style","width","username","description","tags","Button","FormProject","ProjectCard","viewProject","type","Match","state","loaded","clickable","page","handleNextClick","bind","changeToForm","getRandomProject","handleError","changeToView","changeToIndex","onFormSubmit","this","setState","window","flash","get","JSON","stringify","errorMessage","to","handleNext","handleAccept","handleAcceptClick","Form","MatchApp","Projects","exact","path","component","Index"],"mappings":"kHAqJeA,IArJE,SAACC,GAkBd,IAjBA,IAAIC,EAAc,GAEZC,EAAe,SAACC,EAAKC,GACnBD,KAAOF,EACPA,EAAYE,GAAKE,KAAKD,GAEtBH,EAAYE,GAAO,CAACC,IAW5B,MAA2BE,OAAOC,QAAQP,GAA1C,eAAqD,CAAC,IAAD,sBAAzCG,EAAyC,KAApCK,EAAoC,KACjD,OAAQL,GACJ,IAAK,WAEqBK,EAAMC,MADN,kBAGlBP,EAAa,WAAY,yCAEzBM,EAAME,OAAS,GAAKF,EAAME,OAAS,KACnCR,EAAa,WAAY,gDAER,IAAjBM,EAAME,QACNR,EAAa,WAAY,yBAE7B,MAEJ,IAAK,WAEqBM,EAAMC,MADV,2GAIdP,EAAa,WAAY,2BAE7B,MAEJ,IAAK,QAGL,IAAK,cACD,MAEJ,IAAK,QAEkBM,EAAMC,MADN,yJAIfP,EAAa,QAAS,wBAE1B,MAEJ,IAAK,WACD,QAAcS,IAAVH,EAAqB,MAEHA,EAAMC,MADN,+BAIlBP,EAAa,WAAY,gGAE7B,MAEJ,IAAK,cACD,IACMU,EAAeJ,EAAMC,MADN,kBAEhBD,EAGII,GACLV,EAAa,cAAe,4CAH5BA,EAAa,cAAe,kCAKhC,MAEJ,IAAK,WACGM,EAAMK,MAAK,SAACC,GAAD,MAAa,KAANA,MAClBZ,EAAa,YAAa,+BAE9B,MAEJ,IAAK,YAGL,IAAK,cAGL,IAAK,YACD,MAEJ,IAAK,OACqB,IAAjBM,EAAME,QACPR,EAAa,OAAQ,gCAEzB,MAEJ,IAAK,WAAL,IAEWa,EAAoBP,EAApBO,IAAKC,EAAeR,EAAfQ,MAAOC,EAAQT,EAARS,KAKdF,GAAQC,GAAUC,GACnBf,EAAa,WAAY,uBAIf,IAAVc,EAGK,IAAMC,EAAO,GAAK,IAAMA,EAAO,KAChC,IAAMA,EAAO,KAETF,EAAM,IAAMA,EAAM,IAClBb,EAAa,WAAY,gBAGzBa,EAAM,IAAMA,EAAM,IAClBb,EAAa,WAAY,eAI7Ba,EAxBS,CACb,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAuBdC,EAAQ,IACvBd,EAAa,WAAY,eAK7Be,GAzHE,IAAIC,MACCC,kBAyHPjB,EAAa,WAAY,gBAE7B,MAEJ,QACIA,EAAa,aAAc,CAACC,EAAKK,KAO7C,MAAO,CAAEY,MADuC,IAApCd,OAAOe,KAAKpB,GAAaS,QAAgBT,EAAYqB,cAAgBhB,OAC1DL,YAAaA,K,6DChHzBsB,IA1BD,SAACC,GACX,IAAIC,EAAsD,IAArCnB,OAAOe,KAAKG,EAAME,QAAQhB,QAAgBc,EAAME,OAAOJ,cAAgBhB,OACtF,GACAA,OAAOC,QAAQiB,EAAME,QACtBC,KAAI,WAAcC,GAAO,IAAD,mBAAlBzB,EAAkB,KAAb0B,EAAa,KACrB,OACI,sCACQ1B,EADR,cACiB0B,EAAKC,KAAK,SADnBF,MAMpB,OACI,mCACqB,KAAlBH,EAEK,cAAC,IAAD,CAAOM,QAAQ,SAAf,SACI,8BAAMN,MAGd,iC,6MCdNO,EAAc,SAACR,GAKjB,OAAO,mCACH,eAAC,IAAKS,MAAN,WACI,cAAC,IAAKC,MAAN,UAAaV,EAAMW,SAAS3B,QAC5B,cAAC,IAAK4B,QAAN,CAAcC,SAPD,SAACvB,GAClBU,EAAMa,SAASb,EAAMW,SAAS3B,MAAOM,EAAEwB,OAAO9B,gBAYhD+B,EAAgB,SAACf,GAAW,IAAD,EACGgB,mBAAShB,EAAMhB,OADlB,mBACtBiC,EADsB,KACZC,EADY,KAEvBC,EAASnB,EAAMa,SAcrB,OACI,qCACI,cAAC,IAAKD,QAAN,CACIQ,YAAY,WACZP,SAhBS,SAACvB,GAClB,IAAM+B,EAAW,2BAAQJ,GAAR,IAAkBjC,MAAOM,EAAEwB,OAAO9B,QACnDkC,EAAYG,GACZF,EAAOE,IAcCrC,MAAOgB,EAAMhB,MAAMA,QAEvB,cAAC,IAAK4B,QAAN,CAAcQ,YAAY,SAASE,UAAQ,IAC3C,cAAC,IAAD,CAAQf,QAAQ,SAASgB,QAdZ,WACjB,IAAMF,EAAW,2BAAQJ,GAAR,IAAkBO,UAAU,IAC7CN,EAAYG,GACZF,EAAOE,IAWH,wBAKNI,EAAS,SAACzB,GACZ,IAAM0B,EAAe1B,EAAM2B,QAAQC,UAAUC,QAAO,SAAC1B,EAAK2B,GAEtD,OADA3B,EAAI2B,EAAI9C,OAAS,GACVmB,IACR,IAJmB,EAMQa,mBAASU,GANjB,mBAMfK,EANe,KAMNC,EANM,OAOKhB,mBAAS,IAPd,mBAOfd,EAPe,KAOP+B,EAPO,KAShBC,EAAUlC,EAAM2B,QAChBQ,EAAYD,EAAQN,UAEpBQ,EAAe,SAACzD,EAAKK,GACvB,IAAMqD,EAAU,2BAASN,GAAT,kBAAoBpD,EAAOK,IAC3CgD,EAAWK,IAsCf,OAAO,mCACH,eAAC,IAAD,WACKF,EAAUhC,KAAI,SAACmC,EAAMC,GAClB,OAAO,cAAC/B,EAAD,CAEHG,SAAU2B,EACVzB,SAAUuB,GAFLG,MAKb,cAAC,IAAD,CAAOrC,OAAQA,IACf,cAAC,IAAD,CACIqB,QA9CS,SAACjC,GAClBA,EAAEkD,iBAEF,IAAMC,EAAO,CAAEC,SAAU5D,OAAO6D,OAAQZ,IAHhB,EAIOxD,YAASkE,GAAhC7C,EAJgB,EAIhBA,MAAOnB,EAJS,EAITA,YAEf,GAAImB,EAAO,CAKPgD,IACKC,KADL,+BAEgCX,EAAQY,KAChCf,EAPQ,CACZgB,QAAS,CAAE,eAAgB,sBAS1BC,MAAK,SAACC,GAAD,OAASA,EAAIR,QAClBS,OAAM,SAACC,GACJ,OAAQA,EAAIC,SAASC,QACjB,KAAK,IACDpB,EAAS,CAAE/B,OAAQ,CAACyB,QAAS,CAAC,wBAC9B,MACJ,QACI2B,QAAQC,MAAMJ,OAGzBK,SAAQ,WACDxD,EAAMyD,UAAUzD,EAAMyD,mBAGlCxB,EAASxD,IAgBL8B,QAAQ,OAFZ,iCAUNmD,EAAW,SAAC1D,GAAW,IAAD,EACgBgB,mBAAS,IADzB,mBACjB2C,EADiB,KACHC,EADG,KAgBxBC,qBAAU,YAENC,EADmB9D,EAAMa,UACd8C,KACZ,CAACA,EAAc3D,EAAMa,WAExB,IAAMsB,EAAYwB,EAAaxD,KAAI,SAACmC,EAAMC,GACtC,OACI,cAACxB,EAAD,CAEI/B,MAAOsD,EACPzB,SAAU,SAAC7B,GAAD,OAvBD,SAACuD,EAAKvD,GACvB,IAAI+E,EAAUJ,EACdI,EAAQxB,GAAOvD,EACf+E,EAAUA,EAAQC,QACd,SAAC1E,GAAD,QAAS,aAAcA,KAAqB,IAAfA,EAAEkC,YAEnCoC,EAAgBG,GAiBa3B,CAAaG,EAAKvD,KAFlCuD,MAMjB,OACI,qCACI,cAAC,IAAD,CAAQhB,QApBG,WACfqC,EAAgB,GAAD,mBAAKD,GAAL,CAAmB,CAAE3E,MAAO,QAmBVuB,QAAQ,eAArC,oBACC4B,O,kHC1JT8B,EAAuBC,IAAMC,YACjC,SAAUC,EAAMC,GACd,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjBhE,EAAU6D,EAAK7D,QACfiE,EAAUJ,EAAKK,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCxE,EAAQ2E,YAA8BP,EAAM,CAAC,WAAY,YAAa,UAAW,OAEjFQ,EAASC,YAAmBP,EAAU,YAC1C,OAAoBJ,IAAMY,cAAcJ,EAAWK,YAAS,CAC1DV,IAAKA,EACLE,UAAWS,IAAWzE,EAAUqE,EAAS,IAAMrE,EAAUqE,EAAQL,IAChEvE,OAELiE,EAAQgB,YAAc,UACtBhB,EAAQiB,aAnBW,CACjB3E,QAAS,MAmBI0D,QChBXkB,EAAgBC,YAAiB,MACjCC,EAAgBD,YAAiB,MACjCE,EAAWC,YAAmB,aAC9BC,EAAYD,YAAmB,aAAc,CAC/Cb,UAAWS,IAETM,EAAeF,YAAmB,gBAAiB,CACrDb,UAAWW,IAETK,EAAWH,YAAmB,YAAa,CAC7Cb,UAAW,MAETiB,EAAWJ,YAAmB,YAAa,CAC7Cb,UAAW,MAETkB,EAAaL,YAAmB,eAChCM,EAAaN,YAAmB,eAChCO,EAAiBP,YAAmB,oBAIpCQ,EAAoB7B,IAAMC,YAAW,SAAUC,EAAMC,GACvD,IAAIC,EAAWF,EAAKE,SAChBC,EAAYH,EAAKG,UACjByB,EAAK5B,EAAK4B,GACVC,EAAO7B,EAAK6B,KACZC,EAAS9B,EAAK8B,OACdC,EAAO/B,EAAK+B,KACZC,EAAWhC,EAAKgC,SAChB5B,EAAUJ,EAAKK,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCxE,EAAQ2E,YAA8BP,EAAM,CAAC,WAAY,YAAa,KAAM,OAAQ,SAAU,OAAQ,WAAY,OAElHQ,EAASC,YAAmBP,EAAU,QACtC+B,EAAcC,mBAAQ,WACxB,MAAO,CACLC,mBAAoB3B,EAAS,aAE9B,CAACA,IACJ,OAAoBV,IAAMY,cAAc0B,IAAYC,SAAU,CAC5DzH,MAAOqH,GACOnC,IAAMY,cAAcJ,EAAWK,YAAS,CACtDV,IAAKA,GACJrE,EAAO,CACRuE,UAAWS,IAAWT,EAAWK,EAAQoB,GAAM,MAAQA,EAAIC,GAAQ,QAAUA,EAAMC,GAAU,UAAYA,KACvGC,EAGJjC,IAAMY,cAAcQ,EAAU,KAAMc,GAAYA,OAElDL,EAAKd,YAAc,OACnBc,EAAKb,aAjCc,CACjBiB,MAAM,GAiCRJ,EAAKW,IAAMzC,EACX8B,EAAKY,MAAQnB,EACbO,EAAKa,SAAWnB,EAChBM,EAAKc,KAAOvB,EACZS,EAAKe,KAAOpB,EACZK,EAAKgB,KAAOpB,EACZI,EAAKiB,OAASpB,EACdG,EAAKkB,OAASpB,EACdE,EAAKmB,WAAapB,EACHC,O,kKChCAoB,EAnCK,SAACnH,GACjB,IAAMkC,EAAUlC,EAAM2B,QAChByF,EAAQlF,EAAQmF,MAChBC,EAAUpF,EAAQqF,QAExB,OACI,mCACI,cAACxB,EAAA,EAAD,CACIC,GAAG,QACHC,KAAK,QACLuB,MAAO,CAAEC,MAAO,SAChBlD,UAAU,OAJd,SAMI,eAACwB,EAAA,EAAKc,KAAN,WACI,cAACd,EAAA,EAAKY,MAAN,UAAazE,EAAQ7B,OACrB,eAAC0F,EAAA,EAAKgB,KAAN,iBAAeK,EAAMM,YACrB,cAAC3B,EAAA,EAAKgB,KAAN,UAAY7E,EAAQyF,cACpB,eAAC5B,EAAA,EAAKgB,KAAN,wBACe,IACVO,EAAQnH,KAAI,SAACb,GAAD,OAAOA,EAAEoI,YAAUpH,KAAK,SAEzC,cAACyF,EAAA,EAAKgB,KAAN,oBACA,cAAChB,EAAA,EAAKgB,KAAN,UACK7E,EAAQ0F,KAAKzH,KAAI,SAACmC,EAAMlC,GAAP,OACd,cAACyH,EAAA,EAAD,CAAgBtH,QAAQ,iBAAxB,SACK+B,GADQlC,gB,SCb1B0H,EAXK,SAAC9H,GACjB,IAAMkC,EAAUlC,EAAM2B,QAEtB,OACI,qCACI,2CAAcO,EAAQ7B,QACtB,cAAC,IAAD,CAAQsB,QAASO,EAASuB,SAAUzD,EAAMyD,eCFhDsE,EAAc,SAAC/H,GACjB,IAAMkC,EAAUlC,EAAM2B,QAChByF,EAAQlF,EAAQmF,MAChBC,EAAUpF,EAAQqF,QAExB,OACI,cAACxB,EAAA,EAAD,CACIC,GAAG,QACHC,KAAK,QACLuB,MAAO,CAAEC,MAAO,SAChBlD,UAAU,OAJd,SAMI,eAACwB,EAAA,EAAKc,KAAN,WACI,cAACd,EAAA,EAAKY,MAAN,UAAazE,EAAQ7B,OACrB,eAAC0F,EAAA,EAAKgB,KAAN,iBAAeK,EAAMM,YACrB,cAAC3B,EAAA,EAAKgB,KAAN,UAAY7E,EAAQyF,cACpB,eAAC5B,EAAA,EAAKgB,KAAN,yBAAwBO,EAAQnH,KAAI,SAACb,GAAD,OAAOA,EAAEoI,YAAUpH,KAAK,SAC5D,cAACyF,EAAA,EAAKgB,KAAN,oBACA,cAAChB,EAAA,EAAKgB,KAAN,UACC7E,EAAQ0F,KAAKzH,KAAI,SAACmC,EAAMlC,GAAP,OACd,cAACyH,EAAA,EAAD,CAEItH,QAAQ,iBAFZ,SAIK+B,GAHIlC,QAOb,cAACyH,EAAA,EAAD,CAAQtH,QAAQ,eAAegB,QAASvB,EAAMgI,YAAaC,KAAK,SAAhE,wBAuLDC,E,kDA9KX,WAAalI,GAAQ,IAAD,8BAChB,cAAMA,IACDmI,MAAQ,CACTC,QAAQ,EACR7E,MAAO,KACP8E,WAAW,EACXnG,QAAS,KACToG,KAAM,SAGV,EAAKC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,iBAAmB,EAAKA,iBAAiBF,KAAtB,gBACxB,EAAKG,YAAc,EAAKA,YAAYH,KAAjB,gBACnB,EAAKI,aAAe,EAAKA,aAAaJ,KAAlB,gBACpB,EAAKK,cAAgB,EAAKA,cAAcL,KAAnB,gBACrB,EAAKM,aAAe,EAAKA,aAAaN,KAAlB,gBAhBJ,E,wDAmBRrF,GACJA,EAAIC,SACJ2F,KAAKC,SAAS,CAAEzF,MAAO,0BAEvBwF,KAAKC,SAAS,CAAEzF,MAAO,6BAE3B0F,OAAOC,MAAM,mBAAoB,SACjC5F,QAAQC,MAAMJ,K,yCAGE,IAAD,OACfP,IAAMuG,IAAI,cACLnG,MAAK,SAACC,GACH,OAAQA,EAAII,QACR,KAAK,IACD,EAAK2F,SAAS,CAAE9G,QAASe,EAAIR,OAC7B,MACJ,KAAK,IACD,EAAKuG,SAAS,CAAEzF,MAAO,0CACvB,MACJ,QACI,EAAKmF,uBAGhBxF,OAAM,SAACC,GAAD,OAAS,EAAKwF,YAAYxF,MAChCK,SAAQ,WACL,EAAKwF,SAAS,CAAEX,WAAW,EAAMD,QAAQ,S,sCAIrC9I,GAAI,IAAD,OACfyJ,KAAKC,SAAS,CAAEX,WAAW,IAAQ,WAC/B,EAAKK,wB,0CAKTK,KAAKL,qB,mCAGIpJ,GAAI,IAAD,OACZyJ,KAAKC,SAAS,CAAEX,WAAW,IAAQ,WAC/BzF,IAAMuG,IAAN,+BAAkC,EAAKhB,MAAMjG,QAAQY,MAChDE,MAAK,SAACC,GACH,OAAQA,EAAII,QACR,KAAK,IACD,EAAK2F,SAAS,CAAEV,KAAM,QAASpG,QAAS,OACxC,EAAKwG,mBACL,MACJ,KAAK,IACD,EAAKM,SAAS,CAAEV,KAAM,OAAQ1G,UAAWqB,EAAIR,OAC7C,MACJ,QACI,EAAKiG,uBAGhBxF,OAAM,SAACC,GAAD,OAAS,EAAKwF,YAAYxF,MAChCK,SAAQ,WACL,EAAKwF,SAAS,CAAEX,WAAW,EAAMD,QAAQ,Y,qCAMrDW,KAAKC,SAAS,CAAEV,KAAM,W,sCAItBS,KAAKC,SAAS,CAAEV,KAAM,Y,qCAItBS,KAAKC,SAAS,CAAEV,KAAM,QAASpG,QAAS,OACxC6G,KAAKL,qB,+BAGC,IAAD,OAsEL,OACI,qCAtEiB,WACjB,GAAI,EAAKP,MAAM5E,MAAO,CAClB,IAAIA,EAAqC,kBAArB,EAAK4E,MAAM5E,OAA2C,OAArB,EAAK4E,MAAM5E,MAC1D6F,KAAKC,UAAU,EAAKlB,MAAM5E,OAC1B,EAAK4E,MAAM5E,MAEjB,OAAQ,+BAAOA,IAEf,OAAQ,6BA+DN+F,GATF,EAAKnB,MAAMC,OACP,EAAKD,MAAMjG,QAAiB,yCAlDnB,WACb,OAAQ,EAAKiG,MAAMG,MACf,IAAK,QACD,OACI,qCACI,uCACA,cAACT,EAAA,EAAD,CAAQtH,QAAQ,kBAAkBgB,QAAS,EAAKkH,aAAcnH,UAAW,EAAK6G,MAAME,UAAW9D,UAAU,OAAzG,SACK,EAAK4D,MAAME,UAAY,kBAAoB,eAEhD,cAACR,EAAA,EAAD,CAAQtH,QAAQ,iBAAiBgB,QAAS,EAAKgH,gBAAiBjH,UAAW,EAAK6G,MAAME,UAAtF,SACK,EAAKF,MAAME,UAAY,OAAS,eAErC,cAAC,EAAD,CAAa1G,QAAS,EAAKwG,MAAMjG,QAAS8F,YAAa,EAAKY,kBAGxE,IAAK,OACD,OACI,qCACI,4BACI,cAAC,IAAD,CAAMW,GAAG,IAAIhI,QAAS,EAAKsH,cAA3B,oBAEJ,cAAChB,EAAA,EAAD,CAAQtH,QAAQ,kBAAkBgB,QAAS,EAAKkH,aAAcnH,UAAW,EAAK6G,MAAME,UAAW9D,UAAU,OAAzG,SACK,EAAK4D,MAAME,UAAY,kBAAoB,eAEhD,cAACR,EAAA,EAAD,CAAQtH,QAAQ,iBAAiBgB,QAAS,EAAKgH,gBAAiBjH,UAAW,EAAK6G,MAAME,UAAtF,SACK,EAAKF,MAAME,UAAY,OAAS,eAErC,cAAC,EAAD,CAAa1G,QAAS,EAAKwG,MAAMjG,QAASsH,WAAY,EAAKjB,gBAAiBkB,aAAc,EAAKC,uBAG3G,IAAK,OACD,OACI,qCACI,4BACI,cAAC,IAAD,CAAMH,GAAG,IAAIhI,QAAS,EAAKsH,cAA3B,oBAEJ,cAACc,EAAD,CAAalG,SAAU,EAAKqF,aAAcnH,QAAS,EAAKwG,MAAMjG,aAG1E,QACI,OACI,mCACI,6EAQqB0H,GAAL,YAAhC,EAEQ,qD,GAlKJ1F,IAAMQ,WC/BXmF,UARE,WACb,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWC","file":"static/js/8.969bc384.chunk.js","sourcesContent":["const validate = (formData) => {\n    let invalidData = {};\n\n    const addToInvalid = (key, errMsg) => {\n        if (key in invalidData) {\n            invalidData[key].push(errMsg);\n        } else {\n            invalidData[key] = [errMsg];\n        }\n    };\n\n    const getCurrentYear = () => {\n        var dateObj = new Date();\n        var year = dateObj.getUTCFullYear();\n\n        return year;\n    };\n\n    for (const [key, value] of Object.entries(formData)) {\n        switch (key) {\n            case \"username\":\n                const usernameRegex = /[^a-zA-Z0-9]/g;\n                const usernameMatch = value.match(usernameRegex);\n                if (usernameMatch) {\n                    addToInvalid(\"username\", \"username contains special characters\");\n                }\n                if (value.length < 2 || value.length > 30) {\n                    addToInvalid(\"username\", \"username length must be 2-30 characters long\");\n                }\n                if (value.length === 0) {\n                    addToInvalid(\"username\", \"no username specified\");\n                }\n                break;\n\n            case \"fullname\":\n                const nameRegex = /^([a-zA-Z0-9]+|[a-zA-Z0-9]+\\s{1}[a-zA-Z0-9]{1,}|[a-zA-Z0-9]+\\s{1}[a-zA-Z0-9]{3,}\\s{1}[a-zA-Z0-9]{1,})$/;\n                const fullnameMatch = value.match(nameRegex);\n\n                if (!fullnameMatch) {\n                    addToInvalid(\"fullname\", \"unsupported name format\");\n                }\n                break;\n\n            case \"login\":\n                break;\n\n            case \"description\":\n                break;\n\n            case \"email\":\n                const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n                const emailMatch = value.match(emailRegex);\n\n                if (!emailMatch) {\n                    addToInvalid(\"email\", \"invalid email format\");\n                }\n                break;\n\n            case \"password\":\n                if (value === undefined) break;\n                const passwordRegex = /^(?=.*[a-z])(?=.*\\d).{8,}$/;\n                const passwordMatch = value.match(passwordRegex);\n\n                if (!passwordMatch) {\n                    addToInvalid(\"password\", \"password must contain a minimum of eight characters, and at least one letter and one number:\")\n                }\n                break;\n            \n            case \"projectname\":\n                const projectRegex = /[^A-Za-z0-9\\s]/;\n                const projectMatch = value.match(projectRegex);\n                if (!value) {\n                    addToInvalid(\"projectname\", \"project name must not be empty\");\n                }\n                else if (projectMatch) {\n                    addToInvalid(\"projectname\", \"project name contains special characters\");\n                }\n                break;\n\n            case \"cucumber\":\n                if (value.some((e) => e === \"\")) {\n                    addToInvalid(\"formfield\", \"fill all the fields dumbass\");\n                }\n                break;\n\n            case \"interests\":\n                break;\n\n            case \"experiences\":\n                break;\n\n            case \"questions\":\n                break;\n\n            case \"tags\":\n                if ( value.length === 0 ) {\n                    addToInvalid(\"Tags\", \"at least one tag is required\");\n                }\n                break;\n\n            case \"birthday\":\n                //check birthday\n                const {day, month, year} = value;\n                const dayCount = [\n                    31,28,31,30,31,30,31,31,30,31,30,31,\n                ];\n\n                if (!day || !month || !year) {\n                    addToInvalid(\"birthday\", \"fill out all fields\")\n                }\n\n                //check day\n                if (month === 2) {\n                    // is leap year\n                    if (\n                        (0 === year % 4 && 0 !== year % 100) ||\n                        0 === year % 400\n                    ) {\n                        if (day > 29 || day < 1) {\n                            addToInvalid(\"birthday\", \"invalid day\");\n                        }\n                    } else {\n                        if (day > 28 || day < 1) {\n                            addToInvalid(\"birthday\", \"invalid day\");\n                        }\n                    }\n                } else {\n                    if (day > dayCount[month - 1]) {\n                        addToInvalid(\"birthday\", \"invalid day\");\n                    }\n                }\n\n                //check year\n                if (year > getCurrentYear()) {\n                    addToInvalid(\"birthday\", \"invalid year\");\n                }\n                break;\n\n            default:\n                addToInvalid(\"invalidKey\", [key, value]);\n                break;\n        }\n    }\n\n    // check if object is empty, returns true are there is no keys in err\n    let valid = Object.keys(invalidData).length === 0 && invalidData.constructor === Object;\n    return { valid: valid, invalidData: invalidData };\n};\n\nexport default validate;\n","import { Alert } from 'react-bootstrap';\n\n/* ==============================================================\n    <Error errors=Object />\n    Displays errors\n    \n=================================================================== */\n\nconst Error = (props) => {\n    let ErrorMessages = (Object.keys(props.errors).length === 0 && props.errors.constructor === Object)\n        ? ''\n        : Object.entries(props.errors)\n        .map(([key, name], i) => {\n            return (\n                <p key={i}>\n                    {`${key}:\\n${name.join(',\\n')}`}\n                </p>\n            )\n        });\n    \n    return (\n        <>\n        { (ErrorMessages !== '')\n            ? (\n                <Alert variant='danger'>\n                    <pre>{ErrorMessages}</pre>\n                </Alert>\n            ) : (\n            <></>\n        )}\n        </>\n    );\n};\n\nexport default Error;","import { Button, Form } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport validate from \"../Services/Validate\";\nimport Error from './Error';\n\n/* ==============================================================\n    <Error errors=Object />\n    Displays errors\n    \n    <QAForm type=type onChange=function questions={[{value: String, type: type}, ...]} />\n    \n=================================================================== */\n\nconst ViewOneForm = (props) => {\n    const handleChange = (e) => {\n        props.onChange(props.question.value, e.target.value);\n    }\n\n    return <>\n        <Form.Group>\n            <Form.Label>{props.question.value}</Form.Label>\n            <Form.Control onChange={handleChange} />\n        </Form.Group>\n    </>\n    \n}\n\nconst CreateOneForm = (props) => {\n    const [Question, setQuestion] = useState(props.value);\n    const update = props.onChange;\n\n    const handleChange = (e) => {\n        const newQuestion = { ...Question, value: e.target.value };\n        setQuestion(newQuestion);\n        update(newQuestion)\n    };\n\n    const handleDelete = () => {\n        const newQuestion = { ...Question, deleting: true };\n        setQuestion(newQuestion);\n        update(newQuestion)\n    };\n\n    return (\n        <>\n            <Form.Control\n                placeholder=\"Question\"\n                onChange={handleChange}\n                value={props.value.value}\n            ></Form.Control>\n            <Form.Control placeholder=\"Answer\" disabled></Form.Control>\n            <Button variant=\"danger\" onClick={handleDelete}>Delete</Button>\n        </>\n    );\n};\n\nconst FillQA = (props) => {\n    const emptyAnswers = props.project.questions.reduce((map, obj) => {\n        map[obj.value] = \"\";\n        return map;\n    }, {});\n\n    const [answers, setAnswers] = useState(emptyAnswers);\n    const [errors, setError] = useState({});\n\n    const Project = props.project;\n    const Questions = Project.questions;\n    \n    const handleChange = (key, value) => {\n        const newAnswers =  { ...answers, [ key ]: value};\n        setAnswers(newAnswers);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const data = { cucumber: Object.values((answers)) };\n        const { valid, invalidData } = validate(data);\n\n        if (valid) {\n            const options = {\n                headers: { \"Content-Type\": \"application/json\" },\n            };\n            \n            axios\n                .post(\n                    `/app/projects/answer/${Project._id}`,\n                    answers,\n                    options\n                )\n                .then((res) => res.data)\n                .catch((err) => {\n                    switch (err.response.status) {\n                        case 409:\n                            setError({ errors: {project: ['duplicate project']}});\n                            break;\n                        default:\n                            console.error(err);\n                    }\n                })\n                .finally(() => {\n                    if (props.onSubmit) props.onSubmit();\n                });\n        } else {\n            setError(invalidData);\n        }\n    };\n\n    return <>\n        <Form>\n            {Questions.map((elem, idx) => {\n                return <ViewOneForm\n                    key={idx}\n                    question={elem}\n                    onChange={handleChange}\n                />\n            })}\n            <Error errors={errors} />\n            <Button\n                onClick={handleSubmit}\n                variant=\"info\"\n            >\n                Submit answer\n            </Button>\n        </Form>\n    </>;\n};\n\nconst CreateQA = (props) => {\n    const [QuestionList, setQuestionList] = useState([]);\n\n    const handleChange = (idx, value) => {\n        var current = QuestionList;\n        current[idx] = value;\n        current = current.filter(\n            (e) => !(\"deleting\" in e) || e.deleting === false\n        );\n        setQuestionList(current);\n    };\n\n    const createForm = () => {\n        setQuestionList([...QuestionList, { value: \"\" }]);\n    };\n\n    useEffect(() => {\n        const FormChange = props.onChange;\n        FormChange(QuestionList);\n    }, [QuestionList, props.onChange]);\n\n    const Questions = QuestionList.map((elem, idx) => {\n        return (\n            <CreateOneForm\n                key={idx}\n                value={elem}\n                onChange={(value) => handleChange(idx, value)}\n            />\n    )});\n\n    return (\n        <>\n            <Button onClick={createForm} variant=\"outline-info\">Create</Button>\n            {Questions}\n        </>\n    );\n};\n\nexport { FillQA, CreateQA };\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import React from 'react';\nimport { Button, Card } from 'react-bootstrap';\n\nconst ViewProject = (props) => {\n    const Project = props.project;\n    const Owner = Project.owner;\n    const Workers = Project.workers;\n\n    return (\n        <>\n            <Card\n                bg=\"white\"\n                text=\"black\"\n                style={{ width: \"18rem\" }}\n                className=\"mb-2\"\n            >\n                <Card.Body>\n                    <Card.Title>{Project.name}</Card.Title>\n                    <Card.Text>by {Owner.username}</Card.Text>\n                    <Card.Text>{Project.description}</Card.Text>\n                    <Card.Text>\n                        employees:{\" \"}\n                        {Workers.map((e) => e.username).join(\", \")}\n                    </Card.Text>\n                    <Card.Text>tags:</Card.Text>\n                    <Card.Text>\n                        {Project.tags.map((elem, i) => (\n                            <Button key={i} variant=\"outline-danger\">\n                                {elem}\n                            </Button>\n                        ))}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </>\n    )\n}\n\nexport default ViewProject;","import React from 'react';\nimport { FillQA } from \"../../../Components/QAForm\";\n\nconst FormProject = (props) => {\n    const Project = props.project;\n\n    return (\n        <>\n            <h2>Apply to {Project.name}</h2>\n            <FillQA project={Project} onSubmit={props.onSubmit} />\n        </>\n    )\n}\n\nexport default FormProject;","import axios from 'axios';\nimport React from 'react';\nimport { Button, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport ViewProject from './Project';\nimport FormProject from './Form';\n\nconst ProjectCard = (props) => {\n    const Project = props.project;\n    const Owner = Project.owner;\n    const Workers = Project.workers;\n    \n    return (\n        <Card\n            bg=\"white\"\n            text=\"black\"\n            style={{ width: '18rem' }}\n            className=\"mb-2\"\n            >\n            <Card.Body>\n                <Card.Title>{Project.name}</Card.Title>\n                <Card.Text>by {Owner.username}</Card.Text>\n                <Card.Text>{Project.description}</Card.Text>\n                <Card.Text>employees: { Workers.map((e) => e.username).join(', ') }</Card.Text>\n                <Card.Text>tags:</Card.Text>\n                <Card.Text>\n                {Project.tags.map((elem, i) => (\n                    <Button\n                        key={i}\n                        variant=\"outline-danger\"\n                    >\n                        {elem}\n                    </Button>\n                ))}\n                </Card.Text>\n                <Button variant=\"outline-info\" onClick={props.viewProject} type=\"submit\">\n                    View\n                </Button>\n            </Card.Body>\n        </Card>\n    );\n}\n\nclass Match extends React.Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            loaded: false,\n            error: null,\n            clickable: false,\n            Project: null,\n            page: \"index\"\n        }\n\n        this.handleNextClick = this.handleNextClick.bind(this);\n        this.changeToForm = this.changeToForm.bind(this);\n        this.getRandomProject = this.getRandomProject.bind(this);\n        this.handleError = this.handleError.bind(this);\n        this.changeToView = this.changeToView.bind(this);\n        this.changeToIndex = this.changeToIndex.bind(this);\n        this.onFormSubmit = this.onFormSubmit.bind(this);\n    }\n\n    handleError(err) {\n        if (err.response) {\n            this.setState({ error: \"Internal server error\" });\n        } else {\n            this.setState({ error: \"An unknown error occured\" });\n        }\n        window.flash('An error occured', 'error');\n        console.error(err);\n    }\n\n    getRandomProject() {\n        axios.get(\"/app/match\")\n            .then((res) => {\n                switch (res.status) {\n                    case 200:\n                        this.setState({ Project: res.data })\n                        break;\n                    case 204:\n                        this.setState({ error: \"There are no projects left to display\" });\n                        break;\n                    default:\n                        this.getRandomProject();\n                }\n            })\n            .catch((err) => this.handleError(err))\n            .finally(() => {\n                this.setState({ clickable: true, loaded: true});\n            });\n    }\n\n    handleNextClick(e) {\n        this.setState({ clickable: false}, () => {\n            this.getRandomProject();\n        });\n    }\n\n    componentDidMount() {\n        this.getRandomProject();\n    }\n    \n    changeToForm(e) {\n        this.setState({ clickable: false}, () => {\n            axios.get(`/app/match/questions/${this.state.Project._id}`)\n                .then((res) => {\n                    switch (res.status) {\n                        case 200:\n                            this.setState({ page: 'index', Project: null })\n                            this.getRandomProject();\n                            break;\n                        case 202:\n                            this.setState({ page: 'form', questions: res.data });\n                            break;\n                        default:\n                            this.getRandomProject();\n                    }\n                })\n                .catch((err) => this.handleError(err))\n                .finally(() => {\n                    this.setState({ clickable: true, loaded: true});\n                });\n        });\n    }\n\n    changeToView() {\n        this.setState({ page: 'view' });\n    }\n\n    changeToIndex() {\n        this.setState({ page: 'index' });\n    }\n\n    onFormSubmit() {\n        this.setState({ page: 'index', Project: null })\n        this.getRandomProject();\n    }\n\n    render() {\n        const errorMessage = () => {\n            if (this.state.error) {\n                let error = (typeof this.state.error === 'object' && this.state.error !== null)\n                    ? JSON.stringify(this.state.error)\n                    : this.state.error\n                \n                return (<span>{error}</span>);\n            } else {\n                return (<></>);\n            }\n        }\n\n        const renderComponents = () => {\n            const MatchApp = () => {\n                switch (this.state.page) {\n                    case \"index\":\n                        return (\n                            <>\n                                <h1>Match</h1>\n                                <Button variant=\"outline-success\" onClick={this.changeToForm} disabled={!this.state.clickable} className=\"mr-2\">\n                                    {this.state.clickable ? \"Request To Join\" : \"loading...\"}\n                                </Button>\n                                <Button variant=\"outline-danger\" onClick={this.handleNextClick} disabled={!this.state.clickable}>\n                                    {this.state.clickable ? \"Next\" : \"loading...\"}\n                                </Button>\n                                <ProjectCard project={this.state.Project} viewProject={this.changeToView} />\n                            </>\n                        )\n                    case \"view\":\n                        return (\n                            <>\n                                <p>\n                                    <Link to=\"#\" onClick={this.changeToIndex}>back</Link>\n                                </p>\n                                <Button variant=\"outline-success\" onClick={this.changeToForm} disabled={!this.state.clickable} className=\"mr-2\">\n                                    {this.state.clickable ? \"Request To Join\" : \"loading...\"}\n                                </Button>\n                                <Button variant=\"outline-danger\" onClick={this.handleNextClick} disabled={!this.state.clickable}>\n                                    {this.state.clickable ? \"Next\" : \"loading...\"}\n                                </Button>\n                                <ViewProject project={this.state.Project} handleNext={this.handleNextClick} handleAccept={this.handleAcceptClick} />\n                            </>\n                        );\n                    case \"form\":\n                        return (\n                            <>\n                                <p>\n                                    <Link to=\"#\" onClick={this.changeToIndex}>back</Link>\n                                </p>\n                                <FormProject onSubmit={this.onFormSubmit} project={this.state.Project} />\n                            </>\n                        );\n                    default:\n                        return (\n                            <>\n                                <span>can't find the page you're looking for</span>\n                            </>\n                        )\n                }\n\n            }\n\n            if (this.state.loaded) {\n                if (this.state.Project) return (<> { MatchApp() } </>);\n            } else {\n                return (<span>loading...</span>)\n            }\n        }\n\n        return (\n            <>\n                { errorMessage() }\n                { renderComponents() }\n            </>\n        );\n    }\n}\n\nexport default Match;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Index from './Home';\n\nconst Projects = () => {\n    return (\n      <Switch>\n        <Route exact path=\"/match\" component={Index} />\n      </Switch>\n    )\n}\n\nexport default Projects;"],"sourceRoot":""}